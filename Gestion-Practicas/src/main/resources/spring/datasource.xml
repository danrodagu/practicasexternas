<?xml version="1.0" encoding="UTF-8"?>

<!-- 
 * datasource.xml

 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"	
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	">

	<import resource="config/data.xml" />

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" mode="proxy" />
	
	<bean id="persistenceProvider" class="org.hibernate.jpa.HibernatePersistenceProvider" />	

	<bean id="entityManagerFactory" 
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceProvider" ref="persistenceProvider" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" ref="persistenceUnit" />
		<property name="jpaProperties" ref="jpaProperties" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform" ref="sqlDialect" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="hibernateProperties">
            <props>              
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>     
                
                Many examples on the net show configuration for user/pass etc in persistence.xml (JPA),
                     hibernate.cfg.xml (Hibernate-specific). When using Spring, you should NOT do that.
                     Instead set properties as shown in this file to avoid duplication. Whilst debugging this,
                     I noticed that these commented out properties below are ignored anyway, instead Spring uses
                     the dataSource bean's properties.
                <prop key="hibernate.connection.driver_class">oracle.jdbc.OracleDriver</prop> 
                <prop key="hibernate.connection.url">jdbc:Oracle:thin:@localhost:1521/xe</prop>
                <prop key="hibernate.connection.username">USERNAME</prop>
                <prop key="hibernate.connection.password">PASSWORD</prop> 
                            
            </props>
         </property> -->		
	</bean>
	
	<bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator" />
	
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
</beans>